name: ESP8266 RTOS SDK Build

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore SDK, pip and ccache caches
        uses: actions/cache@v4
        with:
          path: |
            $HOME/esp8266-rtos-sdk
            ~/.cache/pip
            ~/.ccache
            ~/
          # include sdk-ref so a change in SDK ref invalidates the SDK cache
          key: esp8266-${{ runner.os }}-sdk-${{ inputs.sdk-ref }}
          restore-keys: |
            esp8266-${{ runner.os }}-sdk-

      - name: Install dependencies
        if: ${{ inputs.install-deps == 'true' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget flex bison gperf python3 python3-pip cmake ninja-build ccache libffi-dev libssl-dev dfu-util unzip xz-utils

      - name: Install ESP8266 RTOS SDK
        run: |
          # If cache restored the SDK directory exists; skip clone/install in that case.
          if [ -d "$HOME/esp8266-rtos-sdk" ]; then
            echo "ESP8266 RTOS SDK found in cache at $HOME/esp8266-rtos-sdk - skipping clone and install"
          else
            echo "Cloning ESP8266 RTOS SDK (ref: '${{ inputs.sdk-ref }}')"
            git clone --recursive https://github.com/espressif/ESP8266_RTOS_SDK.git "$HOME/esp8266-rtos-sdk" --branch "${{ inputs.sdk-ref }}" || \
              git clone --recursive https://github.com/espressif/ESP8266_RTOS_SDK.git "$HOME/esp8266-rtos-sdk"
            export IDF_PATH=$HOME/esp8266-rtos-sdk
            python3 -m pip install --upgrade pip

            $IDF_PATH/install.sh
          fi

      - name: Build firmware
        run: |
          export IDF_PATH=$HOME/esp8266-rtos-sdk
          cd "$GITHUB_WORKSPACE"
          . "$IDF_PATH/export.sh"
          if [ -n "${{ inputs.make-target }}" ]; then
            make ${{ inputs.make-target }}
          else
            make
          fi

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: build/*.bin
